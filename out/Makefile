# Makefile for python interface for package go_in_python_example.
# File is generated by gopy. Do not edit.
# gopy build -output=out -vm=python -rename=true ./

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/home/nekrod/.local/share/virtualenvs/go-in-python-example/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/usr/include/python3.9
LDFLAGS = -L/usr/lib/x86_64-linux-gnu -lpython3.9 -lcrypt -ldl  -lm -lm

all: gen build

gen:
	gopy gen -no-make -vm=python -rename=true ./

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm go_in_python_example.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w go_in_python_example.go
	# generate go_in_python_example_go$(LIBEXT) from go_in_python_example.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o go_in_python_example_go$(LIBEXT) go_in_python_example.go
	# use pybindgen to build the go_in_python_example.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _go_in_python_example$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated go_in_python_example.py python wrapper imports this c-code package
	
	$(GCC) go_in_python_example.c  go_in_python_example_go$(LIBEXT) -o _go_in_python_example$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


